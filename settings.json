{
  "header": {
    "name": "Lorenzo's Ultimate Autonomous AI System",
    "description": "Production-ready Gemini CLI with planning, self-healing MCP management, and Nordic security",
    "version": "4.0.0",
    "environment": "autonomous_production"
  },
  "theme": "Ayu",
  "selectedAuthType": "oauth-personal",
  "model": "gemini-2.5-pro",
  "fallback_model": "gemini-2.5-flash",
  "temperature": 0.7,
  "max_tokens": 8192,
  "checkpointing": {
    "enabled": true,
    "path": ".gemini/checkpoints",
    "auto_checkpoint_frequency": 300
  },
  "sandbox": true,
  "yolo": false,
  "vimMode": true,
  "chatCompression": {
    "enabled": true
  },
  "includeDirectories": [
    "src",
    "docs",
    "scripts",
    "tests"
  ],
  "workspace_root": "./",
  "context_files": {
    "system_context": "./agents.md",
    "rules_context": "./system.md",
    "todo_context": "./todo-universal.md",
    "read_on_startup": true,
    "read_on_model_switch": true,
    "read_on_context_reset": true
  },
  "mcpServers": {
    "filesystem": {
      "command": "npm",
      "args": [
        "run",
        "start",
        "--workspace=@modelcontextprotocol/server-filesystem"
      ],
      "timeout": 15000,
      "trust": false,
      "includeTools": [
        "read_file",
        "write_file",
        "create_directory",
        "list_directory",
        "move_file",
        "delete_file"
      ],
      "description": "Safe filesystem operations with security validation",
      "auto_start": false,
      "health_check": true
    },
    "memory": {
      "command": "npm",
      "args": [
        "run",
        "start",
        "--workspace=@modelcontextprotocol/server-memory"
      ],
      "timeout": 15000,
      "trust": false,
      "includeTools": [
        "store_memory",
        "retrieve_memory",
        "search_memory",
        "update_memory"
      ],
      "description": "Persistent memory and knowledge management",
      "auto_start": false,
      "health_check": true
    },
    "time": {
      "command": "npm",
      "args": [
        "run",
        "start",
        "--workspace=@modelcontextprotocol/server-time"
      ],
      "timeout": 10000,
      "trust": false,
      "includeTools": [
        "get_current_time",
        "schedule_task",
        "set_reminder",
        "timezone_convert"
      ],
      "description": "Time management and scheduling utilities",
      "auto_start": false,
      "health_check": true
    },
    "git": {
      "command": "npm",
      "args": [
        "run",
        "start",
        "--workspace=@modelcontextprotocol/server-git"
      ],
      "timeout": 20000,
      "trust": false,
      "includeTools": [
        "git_commit",
        "git_branch",
        "git_merge",
        "git_log",
        "git_diff",
        "git_status"
      ],
      "description": "Local Git repository management",
      "auto_start": false,
      "health_check": true
    },
    "python": {
      "command": "nix",
      "args": [
        "run",
        "github:modelcontextprotocol/servers#python",
        "--"
      ],
      "timeout": 25000,
      "trust": false,
      "includeTools": [
        "execute_python",
        "install_pip",
        "create_venv",
        "run_tests"
      ],
      "description": "Python code execution and environment management",
      "auto_start": false,
      "load_on_demand": true
    },
    "security_scanner": {
      "command": "nix",
      "args": [
        "run",
        "github:modelcontextprotocol/servers#python",
        "--",
        "python3",
        ".gemini/scripts/lorenzo-security-server.py"
      ],
      "timeout": 30000,
      "trust": false,
      "includeTools": [
        "security_scan",
        "vulnerability_check",
        "compliance_audit",
        "ai_refactor"
      ],
      "description": "Lorenzo's Nordic security framework and AI refactoring",
      "auto_start": true,
      "health_check": true
    }
  },
  "security": {
    "level": "strict",
    "rules": {
      "block_dangerous_commands": true,
      "blocked_commands_list": [
        "rm -rf",
        "sudo rm",
        "format",
        "dd if=",
        ":(){ :|:& };:",
        "chmod 777",
        "chown root",
        "sudo chmod",
        "sudo chown",
        "kill -9",
        "killall",
        "pkill",
        "shutdown",
        "reboot",
        "init 0",
        "halt",
        "poweroff",
        "mkfs",
        "fdisk"
      ],
      "protect_directories": true,
      "protected_paths_list": [
        "/usr",
        "/etc",
        "/var",
        "/System",
        "/Library",
        "/bin",
        "/sbin",
        "/Applications",
        "/Volumes",
        "/boot"
      ],
      "require_confirmation_for": [
        "delete",
        "move",
        "copy",
        "git push",
        "git merge",
        "npm publish"
      ]
    },
    "validation": {
      "max_file_size": "1000MB",
      "secret_detection_enabled": true,
      "secret_patterns": [
        "(?i)(api[-_]?key|secret|token|password)\\s*[:=]\\s*['\"]?([a-zA-Z0-9\\-_]{8,})['\"]?",
        "(?i)(bearer\\s+)?[a-zA-Z0-9_-]{20,}",
        "(?i)sk-[a-zA-Z0-9]{32,}",
        "(?i)ghp_[a-zA-Z0-9]{36}",
        "(?i)aws_access_key_id\\s*[:=]\\s*['\"]?[A-Z0-9]{20}['\"]?",
        "(?i)aws_secret_access_key\\s*[:=]\\s*['\"]?[A-Za-z0-9/+=]{40}['\"]?",
        "(?i)-----BEGIN\\s+(?:RSA\\s+)?PRIVATE\\s+KEY-----"
      ],
      "env_file_protection_enabled": true,
      "code_injection_prevention_enabled": true,
      "dependency_validation_enabled": true
    }
  },
  "resilience": {
    "periodic_saving": {
      "enabled": true,
      "interval_seconds": 180,
      "temp_path": ".gemini/cache/temp_results/",
      "compression_enabled": true
    },
    "checkpointing": {
      "enabled": true,
      "checkpoint_path": ".gemini/cache/checkpoints/",
      "max_checkpoints": 10,
      "auto_checkpoint_frequency": 300
    },
    "rollbacks": {
      "enabled": true,
      "staging_path": ".gemini/cache/staging/",
      "backup_before_rollback": true
    },
    "error_recovery": {
      "retry_attempts": 3,
      "exponential_backoff": true,
      "fallback_to_basic_mode": true
    }
  },
  "logging": {
    "level": "info",
    "format": "structured_json",
    "timestamp": true,
    "include_performance_metrics": true,
    "log_path": ".gemini/logs/",
    "enhanced_logging": {
      "planning_decisions": true,
      "execution_traces": true,
      "mcp_server_health": true,
      "security_events": true,
      "performance_metrics": true
    },
    "rotation": {
      "enabled": true,
      "max_size": "100MB",
      "max_files": 10
    }
  },
  "memory": {
    "enabled": true,
    "memory_bank_path": "./.gemini/memory/",
    "memory_bank_json": "./.gemini/memory/memory_bank.json",
    "feedback_analysis": "./.gemini/memory/feedback-analysis.jsonl",
    "security_learning": "./.gemini/memory/security-learning.jsonl",
    "refactoring_learning": "./.gemini/memory/refactoring-learning.jsonl",
    "planning_memory": ".gemini/memory/planning-patterns.jsonl",
    "execution_memory": ".gemini/memory/execution-strategies.jsonl",
    "max_context_length": 200000,
    "rotation_percentage": 0.08,
    "cross_project_sharing": true,
    "intelligent_prioritization": true,
    "semantic_clustering": true
  },
  "lorenzo_rasmussen_profile": {
    "role": "Senior AI Architecture & Security Consultant",
    "domain": "Hospitality Digital Innovation + AI Security",
    "location": "Copenhagen, Denmark",
    "specialization": [
      "AI Strategy",
      "Security Framework",
      "Nordic Innovation",
      "Automated Refactoring"
    ],
    "experience_level": "8+ years",
    "methodology": "Security-first development with Nordic sustainability principles",
    "decision_framework": "Performance-first with accessibility compliance"
  },
  "performance_targets": {
    "response_time": {
      "p50": "< 80ms",
      "p95": "< 400ms",
      "p99": "< 800ms"
    },
    "throughput": {
      "requests_per_second": 150,
      "concurrent_sessions": 75
    },
    "resource_limits": {
      "memory_usage": "< 768MB",
      "cpu_utilization": "< 60%",
      "disk_io_limit": "< 100MB/s"
    },
    "mcp_targets": {
      "server_startup_time": "< 5s",
      "health_check_frequency": 30,
      "auto_restart_threshold": 3
    }
  },
  "quality_metrics": {
    "error_detection_rate": ">95%",
    "path_compliance": "100%",
    "security_scan_success": "100%",
    "memory_retrieval_efficiency": "<75ms",
    "mcp_server_availability": ">99%",
    "planning_accuracy": ">90%",
    "execution_success_rate": ">85%"
  },
  "supported_models": [
    "gemini-2.5-pro",
    "gemini-2.5-flash",
    "gemini-1.5-pro",
    "gemini-1.5-flash",
    "gemma-2-9b",
    "gemma-2-27b",
    "codeglemma-7b"
  ],
  "hasSeenIdeIntegrationNudge": true,
  "ideMode": true,
  "hideBanner": true,
  "showMemoryUsage": true,
  "loadMemoryFromIncludeDirectories": true,
  "folderTrustFeature": true,
  "skipNextSpeakerCheck": true,
  "folderTrust": true,
  "hideTips": true
}